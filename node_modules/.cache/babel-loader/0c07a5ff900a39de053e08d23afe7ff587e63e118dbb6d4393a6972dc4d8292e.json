{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/ca-countries-app/src/pages/SingleCountry.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Row, Col, Spinner, Image, Accordion, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Weather from \"../components/Weather\";\nimport Borders from \"../components/Borders\";\n\n//////api bits\n// const weatherKey = `c1ae794e4fbf4a4a82f173252230111`;\n// const weatherUrl = `http://api.weatherapi.com/v1/current.json?key=c1ae794e4fbf4a4a82f173252230111&q=`;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst countryUrl = `https://restcountries.com/v3.1/name/`;\nconst borderUrl = `https://restcountries.com/v3/alpha/`;\nconst SingleCountry = () => {\n  _s();\n  let {\n    name\n  } = useParams();\n  const [country, setCountry] = useState(null);\n  const [border, setBorder] = useState([]);\n  const [weather, setWeather] = useState(null);\n  let BorderCard = border.map((border, i) => {\n    return /*#__PURE__*/_jsxDEV(Borders, {\n      name: border[0].name,\n      flag: border[0].flags.svg,\n      region: border[0].region\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  });\n  useEffect(() => {\n    axios.get(`${countryUrl}${name}?fullText=true`).then(countryResponse => {\n      const countryData = countryResponse.data[0];\n      setCountry(countryData);\n\n      // Fetch data for each border\n      const borderRequests = countryData.borders.map(borderCode => {\n        return axios.get(`${borderUrl}${borderCode}`);\n      });\n\n      // Use Promise.all to wait for all requests to complete\n      Promise.all(borderRequests).then(borderResponses => {\n        const borderData = borderResponses.map(response => response.data);\n        setBorder(borderData);\n      }).catch(borderErrors => {\n        console.error(\"Error fetching border data: \", borderErrors);\n      });\n    }).catch(error => {\n      console.error(\"Error fetching country data: \", error);\n    });\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: weather ? /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"my-3\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultActiveKey: \"0\",\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"Bordering Nation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: border ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: BorderCard\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No borders found for this country.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: \"Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                title: \"map\",\n                width: \"100%\",\n                height: \"400\",\n                frameBorder: \"0\",\n                src: `https://www.openstreetmap.org/export/embed.html?bbox=${country.latlng[1]},${country.latlng[0]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"bd-title mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", country.name.common]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Official Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 8\n          }, this), \" \", country.name.official]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Continent :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 8\n          }, this), \" \", country.region]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Subregion :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 8\n          }, this), \" \", country.subregion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n_s(SingleCountry, \"gR00hvgWmvQ1HXJidq8iwE/+GFM=\", false, function () {\n  return [useParams];\n});\n_c = SingleCountry;\nexport default SingleCountry;\nvar _c;\n$RefreshReg$(_c, \"SingleCountry\");","map":{"version":3,"names":["useParams","useState","useEffect","useCallback","Row","Col","Spinner","Image","Accordion","Card","axios","Weather","Borders","jsxDEV","_jsxDEV","Fragment","_Fragment","countryUrl","borderUrl","SingleCountry","_s","name","country","setCountry","border","setBorder","weather","setWeather","BorderCard","map","i","flag","flags","svg","region","fileName","_jsxFileName","lineNumber","columnNumber","get","then","countryResponse","countryData","data","borderRequests","borders","borderCode","Promise","all","borderResponses","borderData","response","catch","borderErrors","console","error","children","className","defaultActiveKey","Item","eventKey","Header","Body","title","width","height","frameBorder","src","latlng","common","official","subregion","animation","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/ca-countries-app/src/pages/SingleCountry.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Row, Col, Spinner, Image, Accordion, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nimport Weather from \"../components/Weather\";\nimport Borders from \"../components/Borders\";\n\n\n//////api bits\n// const weatherKey = `c1ae794e4fbf4a4a82f173252230111`;\n// const weatherUrl = `http://api.weatherapi.com/v1/current.json?key=c1ae794e4fbf4a4a82f173252230111&q=`;\nconst countryUrl = `https://restcountries.com/v3.1/name/`;\nconst borderUrl = `https://restcountries.com/v3/alpha/`;\n\nconst SingleCountry = () => {\n\tlet { name } = useParams();\n\tconst [country, setCountry] = useState(null);\n\tconst [border, setBorder] = useState([]);\n\tconst [weather, setWeather] = useState(null);\n    let BorderCard = border.map((border,i)=>{\n        return <Borders key={i} name={border[0].name} flag={border[0].flags.svg} region={border[0].region}/>\n    });\n\n\tuseEffect(() => {\n\t\taxios\n\t\t.get(`${countryUrl}${name}?fullText=true`)\n\t\t.then((countryResponse) => {\n\t\t\tconst countryData = countryResponse.data[0];\n\t\t\tsetCountry(countryData);\n\t\n\t\t\t// Fetch data for each border\n\t\t\tconst borderRequests = countryData.borders.map((borderCode) => {\n\t\t\treturn axios.get(`${borderUrl}${borderCode}`);\n\t\t\t});\n\t\n\t\t\t// Use Promise.all to wait for all requests to complete\n\t\t\tPromise.all(borderRequests)\n\t\t\t.then((borderResponses) => {\n\t\t\t\tconst borderData = borderResponses.map((response) => response.data);\n\t\t\t\tsetBorder(borderData);\n\t\t\t})\n\t\t\t.catch((borderErrors) => {\n\t\t\t\tconsole.error(\"Error fetching border data: \", borderErrors);\n\t\t\t});\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error fetching country data: \", error);\n\t\t});\n\t}, [name]);\n\t\n\n\n\n\treturn (\n\t\t<div>\n\t\t\t{weather ? (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col className=\"my-3\">\n\t\t\t\t\t\t{/* <Image className=\"w-100\" src={country.flags.svg} /> */}\n\n\t\t\t\t\t\t<Accordion defaultActiveKey=\"0\" className=\"my-2\">\n\t\t\t\t\t\t\t<Accordion.Item eventKey=\"0\">\n\t\t\t\t\t\t\t\t<Accordion.Header>Bordering Nation</Accordion.Header>\n\t\t\t\t\t\t\t\t<Accordion.Body>\n\t\t\t\t\t\t\t\t\t{border ? (\n\t\t\t\t\t\t\t\t\t\t<>{BorderCard}</>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p>No borders found for this country.</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Accordion.Body>\n\t\t\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t\t\t<Accordion.Item eventKey=\"1\">\n\t\t\t\t\t\t\t\t<Accordion.Header>Map</Accordion.Header>\n\t\t\t\t\t\t\t\t<Accordion.Body>\n\t\t\t\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\t\t\t\ttitle=\"map\"\n\t\t\t\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\t\t\t\theight=\"400\"\n\t\t\t\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t\t\t\tsrc={`https://www.openstreetmap.org/export/embed.html?bbox=${country.latlng[1]},${country.latlng[0]}`}\n\t\t\t\t\t\t\t\t\t></iframe>\n\t\t\t\t\t\t\t\t</Accordion.Body>\n\t\t\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"my-3\">\n\t\t\t\t\t\t<h1 className=\"bd-title mb-4\">\n\t\t\t\t\t\t\t<b> {country.name.common}</b>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t<b>Official Name:</b> {country.name.official}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t<b>Continent :</b> {country.region}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t<b>Subregion :</b> {country.subregion}\n\t\t\t\t\t\t</h5>\n\n\n\t\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t) : (\n\t\t\t\t<Spinner animation=\"grow\" />\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SingleCountry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}