{"ast":null,"code":"var _jsxFileName = \"/Users/jackmoloneyobrien/Desktop/College/Front-End/ca-countries-app/src/pages/SingleCountry.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Spinner, Image, Accordion } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Weather from \"../components/Weather\";\nimport Borders from \"../components/Borders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst countryUrl = `https://restcountries.com/v3.1/name/`;\nconst borderUrl = `https://restcountries.com/v3/alpha/`;\nconst SingleCountry = () => {\n  _s();\n  let {\n    name\n  } = useParams();\n  const [country, setCountry] = useState(null);\n  const [border, setBorder] = useState([]);\n  const [weather, setWeather] = useState(null);\n  let BorderCard = border.map((countries, i) => {\n    return countries.map((country, j) => /*#__PURE__*/_jsxDEV(Borders, {\n      name: country.name.common,\n      flag: country.flag,\n      region: country.region\n    }, `${i}-${j}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this));\n  });\n  useEffect(() => {\n    axios.get(`${countryUrl}${name}?fullText=true`).then(countryResponse => {\n      const countryData = countryResponse.data[0];\n      setCountry(countryData);\n      const borderRequests = countryData.borders.map(borderCode => {\n        return axios.get(`${borderUrl}${borderCode}`);\n      });\n      Promise.all(borderRequests).then(borderResponses => {\n        const borderData = borderResponses.map(response => response.data);\n        setBorder(borderData);\n      }).catch(borderErrors => {\n        console.error(\"Error fetching border data: \", borderErrors);\n      });\n    }).catch(error => {\n      console.error(\"Error fetching country data: \", error);\n    });\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: country ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"my-3\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            className: \"w-100\",\n            src: country.flags.svg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            defaultActiveKey: \"0\",\n            className: \"my-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bd-title mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", country.name.common]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), weather && /*#__PURE__*/_jsxDEV(Weather, {\n              name: country.name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Official Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), \" \", country.name.official]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Continent :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), \" \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Subregion :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), \" \", country.subregion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(SingleCountry, \"gR00hvgWmvQ1HXJidq8iwE/+GFM=\", false, function () {\n  return [useParams];\n});\n_c = SingleCountry;\nexport default SingleCountry;\nvar _c;\n$RefreshReg$(_c, \"SingleCountry\");","map":{"version":3,"names":["useParams","useState","useEffect","Row","Col","Spinner","Image","Accordion","axios","Weather","Borders","jsxDEV","_jsxDEV","Fragment","_Fragment","countryUrl","borderUrl","SingleCountry","_s","name","country","setCountry","border","setBorder","weather","setWeather","BorderCard","map","countries","i","j","common","flag","region","fileName","_jsxFileName","lineNumber","columnNumber","get","then","countryResponse","countryData","data","borderRequests","borders","borderCode","Promise","all","borderResponses","borderData","response","catch","borderErrors","console","error","children","className","src","flags","svg","defaultActiveKey","official","subregion","animation","_c","$RefreshReg$"],"sources":["/Users/jackmoloneyobrien/Desktop/College/Front-End/ca-countries-app/src/pages/SingleCountry.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Spinner, Image, Accordion } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nimport Weather from \"../components/Weather\";\nimport Borders from \"../components/Borders\";\n\nconst countryUrl = `https://restcountries.com/v3.1/name/`;\nconst borderUrl = `https://restcountries.com/v3/alpha/`;\n\nconst SingleCountry = () => {\n    let { name } = useParams();\n    const [country, setCountry] = useState(null);\n    const [border, setBorder] = useState([]);\n    const [weather, setWeather] = useState(null);\n\n    let BorderCard = border.map((countries, i) => {\n        return countries.map((country, j) => (\n            <Borders\n                key={`${i}-${j}`}\n                name={country.name.common}\n                flag={country.flag}\n                region={country.region}\n            />\n        ));\n    });\n\n    useEffect(() => {\n        axios\n            .get(`${countryUrl}${name}?fullText=true`)\n            .then((countryResponse) => {\n                const countryData = countryResponse.data[0];\n                setCountry(countryData);\n\n                const borderRequests = countryData.borders.map((borderCode) => {\n                    return axios.get(`${borderUrl}${borderCode}`);\n                });\n\n                Promise.all(borderRequests)\n                    .then((borderResponses) => {\n                        const borderData = borderResponses.map((response) => response.data);\n                        setBorder(borderData);\n                    })\n                    .catch((borderErrors) => {\n                        console.error(\"Error fetching border data: \", borderErrors);\n                    });\n            })\n            .catch((error) => {\n                console.error(\"Error fetching country data: \", error);\n            });\n    }, [name]);\n\n    return (\n        <div>\n            {country ? (\n                <>\n                    <Row>\n                        <Col className=\"my-3\">\n                            <Image className=\"w-100\" src={country.flags.svg} />\n\n                            <Accordion defaultActiveKey=\"0\" className=\"my-2\">\n                                {/* ... (rest of your Accordion items) */}\n                            </Accordion>\n                        </Col>\n                        <Col className=\"my-3\">\n                            <h1 className=\"bd-title mb-4\">\n                                <b> {country.name.common}</b>\n                                {/* Add a conditional check before accessing properties */}\n                                {weather && <Weather name={country.name.common} />}\n                            </h1>\n                            <h5>\n                                <b>Official Name:</b> {country.name.official}\n                            </h5>\n                            <h5>\n                                <b>Continent :</b> {country.region}\n                            </h5>\n                            <h5>\n                                <b>Subregion :</b> {country.subregion}\n                            </h5>\n                        </Col>\n                    </Row>\n                </>\n            ) : (\n                <Spinner animation=\"grow\" />\n            )}\n        </div>\n    );\n};\n\nexport default SingleCountry;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}